version: "2"
services:
  otel-collector:
    image: otel/opentelemetry-collector:0.28.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317"        # OTLP gRPC receiver
    depends_on:
      - kafka
      # - jaeger-all-in-one
      # - zipkin-all-in-one
      
  otel-agent:
    image: otel/opentelemetry-collector:0.28.0
    command: ["--config=/etc/otel-agent-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-agent-config.yaml:/etc/otel-agent-config.yaml
    ports:
      - "8887:8888"   # Prometheus metrics exposed by the agent
      - "14250"       # Jaeger grpc receiver
      - "14268"       # Jaeger http thrift receiver
      - "55678"       # OpenCensus receiver
      - "4317"        # OTLP gRPC receiver
      - "9411"        # Zipkin receiver
      - "1777:1777"   # pprof extension
      - "55679:55679" # zpages extension
      - "13133"       # health_check
    depends_on:
      - otel-collector

  # Synthetic load generators
  jaeger-emitter:
    image: omnition/synthetic-load-generator:1.0.25
    environment:
      - JAEGER_COLLECTOR_URL=http://otel-agent:14268
    depends_on:
      - otel-agent

  zipkin-emitter:
    image: omnition/synthetic-load-generator:1.0.25
    environment:
      - ZIPKINV2_JSON_URL=http://otel-agent:9411/api/v2/spans
    depends_on:
      - otel-agent

  metrics-load-generator:
    build:
      dockerfile: $PWD/app/Dockerfile
      context: ./app
    environment:
      - OTEL_AGENT_ENDPOINT=otel-agent:4317
    depends_on:
      - otel-agent
  # # Jaeger
  # jaeger-all-in-one:
  #   image: jaegertracing/all-in-one:latest
  #   ports:
  #     - "16686:16686"
  #     - "14268"
  #     - "14250"
  # # Zipkin
  # zipkin-all-in-one:
  #   image: openzipkin/zipkin:latest
  #   ports:
  #     - "9411:9411"
  # prometheus:
  #   container_name: prometheus
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./prometheus.yaml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
